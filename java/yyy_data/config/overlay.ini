[Meta]
# The data in this section is only for informational purposes
# and will not be used when the config is loaded.
# Modifications here may not change anything.
rfDynHUD_Version          = "1.4.0-Beta (build 118)"
Design_Resolution         = "1920x1200"
Design_Grid               = "(0,0;10,10)"

[Global]
useClassScoring           = "~DEFAULT~"                // Ignore vehicles from other classes than the viewed one for scoring?

[NamedColors]
ETVCaptionBackgroundColor = #787878
ETVCaptionBackgroundColor1st = #B10000
ETVCaptionFontColor       = #FFFFFF
ETVDataBackgroundColor    = #000000
ETVDataBackgroundColor1st = #230000
ETVDataBackgroundColorFaster = #008800
ETVDataBackgroundColorFastest = #C000D2
ETVDataBackgroundColorSlower = #BAB802
ETVDataFontColor          = #FFFFFF
ETVDataFontColorFaster    = #FFFFFF
ETVDataFontColorFasterst  = #000000
ETVDataFontColorSlower    = #000000
PositionItemColorLeader   = #FF0000C0
PositionItemColorMe       = #00FF00C0
PositionItemColorNextBehind = #FFFF00C0
PositionItemColorNextInFront = #0000FFC0
PositionItemColorNormal   = #FFFFFFC0
PositionItemFontColor     = #000000
StandardBackground        = #00000096
StandardFontColor         = #C0BC3D

[NamedFonts]
BiggerFont                = "Dialog|PLAIN|14va"
ETVFont                   = "DokChampa|BOLD|16va"
GearFont                  = "Monospaced|BOLD|26va"
PositionItemFont          = "Verdana|BOLD|9va"
SmallerFont               = "Monospaced|BOLD|9va"
StandardFont              = "Dialog|BOLD|13va"
StandardFont2             = "Dialog|BOLD|12va"
StandardFont3             = "Dialog|BOLD|11va"

[BorderAliases]
StandardBorder            = "backgroundcolor_border.ini"

[Widget::StatusFlagsWidget1]
class                     = "net.ctdp.rfdynhud.widgets.standard.statusflags.StatusFlagsWidget" // The Java class, that defines the Widget.
positioning               = TOP_CENTER                 // The way, position coordinates are interpreted (relative to). Valid values: TOP_LEFT, TOP_CENTER, TOP_RIGHT, CENTER_LEFT, CENTER_CENTER, CENTER_RIGHT, BOTTOM_LEFT, BOTTOM_CENTER, BOTTOM_RIGHT.
x                         = 0.0%                       // The x-coordinate for the position.
y                         = 0.0%                       // The y-coordinate for the position.
zIndex                    = "~DEFAULT~"                // A z-index, to sort Widgets by.
width                     = 6.0%                       // The width. Use negative values to make the Widget be sized relative to screen size.
height                    = 5.333%                     // The height. Use negative values to make the Widget be sized relative to screen size.
border                    = "N/A"                      // The widget's border.
paddingTop                = "~DEFAULT~"                // top padding
paddingLeft               = "~DEFAULT~"                // left padding
paddingRight              = "~DEFAULT~"                // right padding
paddingBottom             = "~DEFAULT~"                // bottom padding
initialVisibility         = "~DEFAULT~"                // The initial visibility.
background                = "color:#00000000"          // The Widget's background (color or image).
showGreenTime             = "~DEFAULT~"                // Number of seconds to display the green flag after thrown (-1 for forever)
imageGreen                = "~DEFAULT~"                // 
imageYellow               = "~DEFAULT~"                // 
imageBlue                 = "~DEFAULT~"                // 
imageRed                  = "~DEFAULT~"                // 
imageRedYellow            = "~DEFAULT~"                // 
imageWhite                = "~DEFAULT~"                // 
imageBlack                = "~DEFAULT~"                // 
imageChequered            = "~DEFAULT~"                // 

[Widget::RideHeightWidget1]
class                     = "net.ctdp.rfdynhud.widgets.standard.rideheight.RideHeightWidget" // The Java class, that defines the Widget.
positioning               = TOP_LEFT                   // The way, position coordinates are interpreted (relative to). Valid values: TOP_LEFT, TOP_CENTER, TOP_RIGHT, CENTER_LEFT, CENTER_CENTER, CENTER_RIGHT, BOTTOM_LEFT, BOTTOM_CENTER, BOTTOM_RIGHT.
x                         = 29.750002%                 // The x-coordinate for the position.
y                         = 2.25%                      // The y-coordinate for the position.
zIndex                    = "~DEFAULT~"                // A z-index, to sort Widgets by.
width                     = 8.7%                       // The width. Use negative values to make the Widget be sized relative to screen size.
height                    = 6.8%                       // The height. Use negative values to make the Widget be sized relative to screen size.
border                    = "~DEFAULT~"                // The widget's border.
paddingTop                = "~DEFAULT~"                // top padding
paddingLeft               = "~DEFAULT~"                // left padding
paddingRight              = "~DEFAULT~"                // right padding
paddingBottom             = "~DEFAULT~"                // bottom padding
initialVisibility         = "~DEFAULT~"                // The initial visibility.
background                = "~DEFAULT~"                // The Widget's background (color or image).
font                      = "~DEFAULT~"                // The used font.
fontColor                 = "~DEFAULT~"                // The Widget's font color in the format #RRGGBB (hex).
displayHeader             = "~DEFAULT~"                // Whether to display the header or not.
headerFont                = "~DEFAULT~"                // Font for the header.
headerFontColor           = "~DEFAULT~"                // Font color for the header

[Widget::MiscWidget1]
class                     = "net.ctdp.rfdynhud.widgets.standard.misc.MiscWidget" // The Java class, that defines the Widget.
positioning               = TOP_CENTER                 // The way, position coordinates are interpreted (relative to). Valid values: TOP_LEFT, TOP_CENTER, TOP_RIGHT, CENTER_LEFT, CENTER_CENTER, CENTER_RIGHT, BOTTOM_LEFT, BOTTOM_CENTER, BOTTOM_RIGHT.
x                         = 0.0%                       // The x-coordinate for the position.
y                         = 11.230469%                 // The y-coordinate for the position.
zIndex                    = "~DEFAULT~"                // A z-index, to sort Widgets by.
width                     = -44.82422%                 // The width. Use negative values to make the Widget be sized relative to screen size.
height                    = 6.0546875%                 // The height. Use negative values to make the Widget be sized relative to screen size.
border                    = "~DEFAULT~"                // The widget's border.
paddingTop                = "~DEFAULT~"                // top padding
paddingLeft               = "~DEFAULT~"                // left padding
paddingRight              = "~DEFAULT~"                // right padding
paddingBottom             = "~DEFAULT~"                // bottom padding
initialVisibility         = "~DEFAULT~"                // The initial visibility.
background                = "~DEFAULT~"                // The Widget's background (color or image).
font                      = "~DEFAULT~"                // The used font.
fontColor                 = "~DEFAULT~"                // The Widget's font color in the format #RRGGBB (hex).
displayScoring            = "~DEFAULT~"                // Display the scoring part of the Widget?
displayTiming             = "~DEFAULT~"                // Display the timing part of the Widget?
displayVelocity           = "~DEFAULT~"                // Display the velocity and top speed part of the Widget?
relTopspeedResetDelay     = "~DEFAULT~"                // The delay after which the relative topspeed is resetted (in milliseconds).

[Widget::TemperaturesWidget1]
class                     = "net.ctdp.rfdynhud.widgets.standard.temperatures.TemperaturesWidget" // The Java class, that defines the Widget.
positioning               = TOP_RIGHT                  // The way, position coordinates are interpreted (relative to). Valid values: TOP_LEFT, TOP_CENTER, TOP_RIGHT, CENTER_LEFT, CENTER_CENTER, CENTER_RIGHT, BOTTOM_LEFT, BOTTOM_CENTER, BOTTOM_RIGHT.
x                         = 0.5859375%                 // The x-coordinate for the position.
y                         = 14.453125%                 // The y-coordinate for the position.
zIndex                    = "~DEFAULT~"                // A z-index, to sort Widgets by.
width                     = 17.773438%                 // The width. Use negative values to make the Widget be sized relative to screen size.
height                    = 26.464844%                 // The height. Use negative values to make the Widget be sized relative to screen size.
border                    = "~DEFAULT~"                // The widget's border.
paddingTop                = "~DEFAULT~"                // top padding
paddingLeft               = "~DEFAULT~"                // left padding
paddingRight              = "~DEFAULT~"                // right padding
paddingBottom             = "~DEFAULT~"                // bottom padding
initialVisibility         = "~DEFAULT~"                // The initial visibility.
background                = "~DEFAULT~"                // The Widget's background (color or image).
font                      = "~DEFAULT~"                // The used font.
fontColor                 = "~DEFAULT~"                // The Widget's font color in the format #RRGGBB (hex).
font2                     = "~DEFAULT~"                // The used (smaller) font.
displayEngine             = "~DEFAULT~"                // Display the engine part of the Widget?
displayWaterTemp          = false                      // Display water temperature?
engineHeight              = 9.9609375%                 // The height of the engine bar.
displayTires              = "~DEFAULT~"                // Display the tire part of the Widget?
tireIcon                  = "~DEFAULT~"                // The image name for the tire icon.
tireWidth                 = 10.253906%                 // The width of a tire image.
tireHeight                = 10.449219%                 // The height of a tire image.
displayBrakes             = "~DEFAULT~"                // Display the brakes of the Widget?
brakeDiscIcon             = "~DEFAULT~"                // The image name for the brake disc icon.
brakeWidth                = 6.7382812%                 // The width of a brake image.
brakeHeight               = 19.238281%                 // The height of a brake image.
brakeTempsPeakDelay       = "~DEFAULT~"                // (in milliseconds) If greater than 0, the brake temperatures will stay on their peek values after a turn for the chosen amount of milliseconds.

[Widget::TimeCompareWidget1]
class                     = "net.ctdp.rfdynhud.widgets.standard.timecomp.TimeCompareWidget" // The Java class, that defines the Widget.
positioning               = TOP_LEFT                   // The way, position coordinates are interpreted (relative to). Valid values: TOP_LEFT, TOP_CENTER, TOP_RIGHT, CENTER_LEFT, CENTER_CENTER, CENTER_RIGHT, BOTTOM_LEFT, BOTTOM_CENTER, BOTTOM_RIGHT.
x                         = 0.5%                       // The x-coordinate for the position.
y                         = 14.666666%                 // The y-coordinate for the position.
zIndex                    = "~DEFAULT~"                // A z-index, to sort Widgets by.
width                     = 20.625%                    // The width. Use negative values to make the Widget be sized relative to screen size.
height                    = 14.083333%                 // The height. Use negative values to make the Widget be sized relative to screen size.
border                    = "~DEFAULT~"                // The widget's border.
paddingTop                = "~DEFAULT~"                // top padding
paddingLeft               = "~DEFAULT~"                // left padding
paddingRight              = "~DEFAULT~"                // right padding
paddingBottom             = "~DEFAULT~"                // bottom padding
initialVisibility         = "~DEFAULT~"                // The initial visibility.
background                = "~DEFAULT~"                // The Widget's background (color or image).
font                      = "~DEFAULT~"                // The used font.
fontColor                 = "~DEFAULT~"                // The Widget's font color in the format #RRGGBB (hex).
abbreviate                = "~DEFAULT~"                // Whether to abbreviate "Sector" to "Sec", or not.
displaySectors            = "~DEFAULT~"                // Display sector times?

[Widget::DrivingAidsWidget1]
class                     = "net.ctdp.rfdynhud.widgets.standard.drivingaids.DrivingAidsWidget" // The Java class, that defines the Widget.
positioning               = TOP_LEFT                   // The way, position coordinates are interpreted (relative to). Valid values: TOP_LEFT, TOP_CENTER, TOP_RIGHT, CENTER_LEFT, CENTER_CENTER, CENTER_RIGHT, BOTTOM_LEFT, BOTTOM_CENTER, BOTTOM_RIGHT.
x                         = 27.5625%                   // The x-coordinate for the position.
y                         = 19.083332%                 // The y-coordinate for the position.
zIndex                    = "~DEFAULT~"                // A z-index, to sort Widgets by.
width                     = 4.0625%                    // The width. Use negative values to make the Widget be sized relative to screen size.
height                    = 35.833332%                 // The height. Use negative values to make the Widget be sized relative to screen size.
border                    = "~DEFAULT~"                // The widget's border.
paddingTop                = 3                          // top padding
paddingLeft               = 3                          // left padding
paddingRight              = 3                          // right padding
paddingBottom             = 3                          // bottom padding
initialVisibility         = "~DEFAULT~"                // The initial visibility.
background                = "~DEFAULT~"                // The Widget's background (color or image).
columns                   = 1.0                        // Number of columns to display
gap                       = "~DEFAULT~"                // Gap between the icons
alignment                 = BOTTOM_LEFT                // Alignment of icons
stateVisibilities         = "A,A,A,N,N,N,N,A,N,A,N,N,N" // Aid state visibilities
iconBackgroundOff         = "~DEFAULT~"                // Background image for an aid's 'off' state
iconBackgroundLow         = "~DEFAULT~"                // Background image for an aid's 'low' state
iconBackgroundMedium      = "~DEFAULT~"                // Background image for an aid's 'medium' state
iconBackgroundHigh        = "~DEFAULT~"                // Background image for an aid's 'high' state

[Widget::ETVSessionStateWidget1]
class                     = "net.ctdp.rfdynhud.widgets.etv2010.sessionstate.ETVSessionStateWidget" // The Java class, that defines the Widget.
positioning               = TOP_CENTER                 // The way, position coordinates are interpreted (relative to). Valid values: TOP_LEFT, TOP_CENTER, TOP_RIGHT, CENTER_LEFT, CENTER_CENTER, CENTER_RIGHT, BOTTOM_LEFT, BOTTOM_CENTER, BOTTOM_RIGHT.
x                         = 0.0%                       // The x-coordinate for the position.
y                         = 19.042969%                 // The y-coordinate for the position.
zIndex                    = "~DEFAULT~"                // A z-index, to sort Widgets by.
width                     = 200px                      // The width. Use negative values to make the Widget be sized relative to screen size.
height                    = 2.5390625%                 // The height. Use negative values to make the Widget be sized relative to screen size.
border                    = "N/A"                      // The widget's border.
paddingTop                = "~DEFAULT~"                // top padding
paddingLeft               = "~DEFAULT~"                // left padding
paddingRight              = "~DEFAULT~"                // right padding
paddingBottom             = "~DEFAULT~"                // bottom padding
initialVisibility         = "~DEFAULT~"                // The initial visibility.
background                = "~DEFAULT~"                // The Widget's background (color or image).
font                      = "ETVFont"                  // The used font.
fontColor                 = "ETVDataFontColor"         // The Widget's font color in the format #RRGGBB (hex).
useImages                 = "~DEFAULT~"                // Whether to use images to render the items.
imagesIni                 = "~DEFAULT~"                // The ini file, that configures the background images.
captionBgColor            = "~DEFAULT~"                // The background color for the "Lap" caption.
captionColor              = "~DEFAULT~"                // The font color for the "Lap" caption.
dataBgColor               = "~DEFAULT~"                // The background color for the data fields.
itemGap                   = "~DEFAULT~"                // The gap between the elements in pixels.
showNamesInAllUppercase   = "~DEFAULT~"                // Whether to display names in all upper case.
sessionLimitPreference    = "~DEFAULT~"                // If a session is limited by both laps and time, this limit will be displayed.

[Widget::DeviceStatesWidget1]
class                     = "net.ctdp.rfdynhud.widgets.standard.devicestates.DeviceStatesWidget" // The Java class, that defines the Widget.
positioning               = TOP_LEFT                   // The way, position coordinates are interpreted (relative to). Valid values: TOP_LEFT, TOP_CENTER, TOP_RIGHT, CENTER_LEFT, CENTER_CENTER, CENTER_RIGHT, BOTTOM_LEFT, BOTTOM_CENTER, BOTTOM_RIGHT.
x                         = 36.125%                    // The x-coordinate for the position.
y                         = 20.583334%                 // The y-coordinate for the position.
zIndex                    = "~DEFAULT~"                // A z-index, to sort Widgets by.
width                     = 4.125%                     // The width. Use negative values to make the Widget be sized relative to screen size.
height                    = 34.416668%                 // The height. Use negative values to make the Widget be sized relative to screen size.
border                    = "N/A"                      // The widget's border.
paddingTop                = "~DEFAULT~"                // top padding
paddingLeft               = "~DEFAULT~"                // left padding
paddingRight              = "~DEFAULT~"                // right padding
paddingBottom             = "~DEFAULT~"                // bottom padding
initialVisibility         = "~DEFAULT~"                // The initial visibility.
background                = "~DEFAULT~"                // The Widget's background (color or image).
columns                   = 1.0                        // Number of columns to display
gap                       = "~DEFAULT~"                // Gap between the icons
alignment                 = "~DEFAULT~"                // Alignment of icons
speedLimiterVisibility    = "A"                        // Speed limiter visibility
ignitionVisibility        = "~DEFAULT~"                // Ignition visibility
frontFlapVisibility       = "~DEFAULT~"                // Front flap device visibility
rearFlapVisibility        = "~DEFAULT~"                // Rear flap device visibility
iconBackgroundOff         = "~DEFAULT~"                // Background image for an aid's 'off' state
iconBackgroundLow         = "~DEFAULT~"                // Background image for an aid's 'low' state
iconBackgroundMedium      = "~DEFAULT~"                // Background image for an aid's 'medium' state
iconBackgroundHigh        = "~DEFAULT~"                // Background image for an aid's 'high' state
imageSpeedLimiterOff      = "~DEFAULT~"
imageSpeedLimiterOn       = "~DEFAULT~"
imageIgnitionOff          = "~DEFAULT~"
imageIgnitionOn           = "~DEFAULT~"
imageIgnitionStarter      = "~DEFAULT~"
imageFrontFlapDisallowed  = "~DEFAULT~"
imageFrontFlapNotYetAllowed = "~DEFAULT~"
imageFrontFlapAllowed     = "~DEFAULT~"
imageFrontFlapActivated   = "~DEFAULT~"
imageRearFlapDisallowed   = "~DEFAULT~"
imageRearFlapNotYetAllowed= "~DEFAULT~"
imageRearFlapAllowed      = "~DEFAULT~"
imageRearFlapActivated    = "~DEFAULT~"

[Widget::MapWidget1]
class                     = "net.ctdp.rfdynhud.widgets.standard.map.MapWidget" // The Java class, that defines the Widget.
positioning               = TOP_RIGHT                  // The way, position coordinates are interpreted (relative to). Valid values: TOP_LEFT, TOP_CENTER, TOP_RIGHT, CENTER_LEFT, CENTER_CENTER, CENTER_RIGHT, BOTTOM_LEFT, BOTTOM_CENTER, BOTTOM_RIGHT.
x                         = 18.25%                     // The x-coordinate for the position.
y                         = 24.5%                      // The y-coordinate for the position.
zIndex                    = "~DEFAULT~"                // A z-index, to sort Widgets by.
width                     = 41.3125%                   // The width. Use negative values to make the Widget be sized relative to screen size.
height                    = 31.75%                     // The height. Use negative values to make the Widget be sized relative to screen size.
border                    = ""                         // The widget's border.
paddingTop                = "~DEFAULT~"                // top padding
paddingLeft               = "~DEFAULT~"                // left padding
paddingRight              = "~DEFAULT~"                // right padding
paddingBottom             = "~DEFAULT~"                // bottom padding
initialVisibility         = "~DEFAULT~"                // The initial visibility.
background                = "~DEFAULT~"                // The Widget's background (color or image).
font                      = "PositionItemFont"         // The used font.
fontColor                 = "PositionItemFontColor"    // The Widget's font color in the format #RRGGBB (hex).
rotationEnabled           = "~DEFAULT~"                // Map rotation enabled?
roadColorSec1             = "~DEFAULT~"                // The color used for the road and sector 1 in #RRGGBBAA (hex).
roadBoundaryColorSec1     = "~DEFAULT~"                // The color used for the road boundary and sector 1 in #RRGGBBAA (hex).
roadColorSec2             = "~DEFAULT~"                // The color used for the road and sector 2 in #RRGGBBAA (hex).
roadBoundaryColorSec2     = "~DEFAULT~"                // The color used for the road boundary and sector 2 in #RRGGBBAA (hex).
roadColorSec3             = "~DEFAULT~"                // The color used for the road and sector 3 in #RRGGBBAA (hex).
roadBoundaryColorSec3     = "~DEFAULT~"                // The color used for the road boundary and sector 3 in #RRGGBBAA (hex).
pitlaneColor              = "~DEFAULT~"                // The color used for the pitlane in #RRGGBBAA (hex).
roadWidth                 = "~DEFAULT~"                // The width of the roadin absolute pixels.
itemRadius                = "~DEFAULT~"                // The abstract radius for any displayed driver item.
markColorNormal           = "~DEFAULT~"                // The color used for all, but special cars in #RRGGBBAA (hex).
markColorLeader           = "~DEFAULT~"                // The color used for the leader's car in #RRGGBBAA (hex).
markColorMe               = "~DEFAULT~"                // The color used for your own car in #RRGGBBAA (hex).
useMyColorForMe1st        = "~DEFAULT~"                // Use 'markColorMe' for my item when I am at 1st place?
markColorNextInFront      = "~DEFAULT~"                // The color used for the car in front of you in #RRGGBBAA (hex).
markColorNextBehind       = "~DEFAULT~"                // The color used for the car behind you in #RRGGBBAA (hex).
displayPosNumbers         = "~DEFAULT~"                // Display numbers on the position markers?
displayNameLabels         = "~DEFAULT~"                // Display name label near the position markers?
nameLabelPos              = "~DEFAULT~"                // Positioning of the name labels.
nameLabelFont             = "~DEFAULT~"                // Font for the name labels.
nameLabelFontColor        = "~DEFAULT~"                // Font color for the name labels.

[Widget::TimingWidget1]
class                     = "net.ctdp.rfdynhud.widgets.standard.timing.TimingWidget" // The Java class, that defines the Widget.
positioning               = CENTER_LEFT                // The way, position coordinates are interpreted (relative to). Valid values: TOP_LEFT, TOP_CENTER, TOP_RIGHT, CENTER_LEFT, CENTER_CENTER, CENTER_RIGHT, BOTTOM_LEFT, BOTTOM_CENTER, BOTTOM_RIGHT.
x                         = 0.5%                       // The x-coordinate for the position.
y                         = -5.8333335%                // The y-coordinate for the position.
zIndex                    = "~DEFAULT~"                // A z-index, to sort Widgets by.
width                     = 20.6875%                   // The width. Use negative values to make the Widget be sized relative to screen size.
height                    = 30.083334%                 // The height. Use negative values to make the Widget be sized relative to screen size.
border                    = "~DEFAULT~"                // The widget's border.
paddingTop                = "~DEFAULT~"                // top padding
paddingLeft               = "~DEFAULT~"                // left padding
paddingRight              = "~DEFAULT~"                // right padding
paddingBottom             = "~DEFAULT~"                // bottom padding
initialVisibility         = "~DEFAULT~"                // The initial visibility.
background                = "~DEFAULT~"                // The Widget's background (color or image).
font                      = "~DEFAULT~"                // The used font.
fontColor                 = "~DEFAULT~"                // The Widget's font color in the format #RRGGBB (hex).
displayAbsFastest         = "~DEFAULT~"                // Display the absolute fastest lap part of the Widget?
displayOwnFastest         = "~DEFAULT~"                // Display your own fastest lap part of the Widget?
cumulativeSectors         = "~DEFAULT~"                // Display the second sector as a sum?
forceCurrentCumulSectors  = "~DEFAULT~"                // Display the second sector as a sum even if the others not?
lastLapDisplayDelay       = -85                        // The time for which the last driven lap will keepbeing displayed (in milliseconds).
slowerColor               = "~DEFAULT~"                // The font color to use for positive gaps.
fasterColor               = "~DEFAULT~"                // The font color to use for negative gaps.

[Widget::WearWidget1]
class                     = "net.ctdp.rfdynhud.widgets.standard.wear.WearWidget" // The Java class, that defines the Widget.
positioning               = TOP_RIGHT                  // The way, position coordinates are interpreted (relative to). Valid values: TOP_LEFT, TOP_CENTER, TOP_RIGHT, CENTER_LEFT, CENTER_CENTER, CENTER_RIGHT, BOTTOM_LEFT, BOTTOM_CENTER, BOTTOM_RIGHT.
x                         = 0.5859375%                 // The x-coordinate for the position.
y                         = 41.210938%                 // The y-coordinate for the position.
zIndex                    = "~DEFAULT~"                // A z-index, to sort Widgets by.
width                     = 17.773438%                 // The width. Use negative values to make the Widget be sized relative to screen size.
height                    = 24.414062%                 // The height. Use negative values to make the Widget be sized relative to screen size.
border                    = "~DEFAULT~"                // The widget's border.
paddingTop                = "~DEFAULT~"                // top padding
paddingLeft               = "~DEFAULT~"                // left padding
paddingRight              = "~DEFAULT~"                // right padding
paddingBottom             = "~DEFAULT~"                // bottom padding
initialVisibility         = "~DEFAULT~"                // The initial visibility.
background                = "~DEFAULT~"                // The Widget's background (color or image).
font                      = "~DEFAULT~"                // The used font.
fontColor                 = "~DEFAULT~"                // The Widget's font color in the format #RRGGBB (hex).
font2                     = "~DEFAULT~"                // The used (smaller) font.
displayEngine             = "~DEFAULT~"                // Display the engine part of the Widget?
engineHeight              = 5.6640625%                 // The height of the engine bar.
hundredPercentBase        = "~DEFAULT~"                // The value range to be used as 100% base.
displayWearPercent        = "~DEFAULT~"                // Display wear in percentage numbers?
engineEstimationImage     = "~DEFAULT~"                // Image to display where the engine is expected to explode.
engineFailImage           = "~DEFAULT~"                // Image to display, if the engine WILL fail before the end of the race.
displayTires              = "~DEFAULT~"                // Display the tire part of the Widget?
displayCompoundName       = false                      // Display the tire compound name in the header?
tireIcon                  = "~DEFAULT~"                // The image name for the tire icon.
tireWidth                 = 10.253906%                 // The width of a tire image.
tireHeight                = 11.71875%                  // The height of a tire image.
swapTireWearGripMeaning   = "~DEFAULT~"                // Swap bar and line display for wear and grip?
displayBrakes             = "~DEFAULT~"                // Display the brakes of the Widget?
brakeDiscIcon             = "~DEFAULT~"                // The image name for the brake disc icon.
brakeWidth                = 6.7382812%                 // The width of a brake image.
brakeHeight               = 17.773438%                 // The height of a brake image.

[Widget::StandingsWidget1]
class                     = "net.ctdp.rfdynhud.widgets.standard.standings.StandingsWidget" // The Java class, that defines the Widget.
positioning               = BOTTOM_LEFT                // The way, position coordinates are interpreted (relative to). Valid values: TOP_LEFT, TOP_CENTER, TOP_RIGHT, CENTER_LEFT, CENTER_CENTER, CENTER_RIGHT, BOTTOM_LEFT, BOTTOM_CENTER, BOTTOM_RIGHT.
x                         = 0.5%                       // The x-coordinate for the position.
y                         = 25.5%                      // The y-coordinate for the position.
zIndex                    = "~DEFAULT~"                // A z-index, to sort Widgets by.
width                     = 21.1875%                   // The width. Use negative values to make the Widget be sized relative to screen size.
height                    = 14.916667%                 // The height. Use negative values to make the Widget be sized relative to screen size.
border                    = "~DEFAULT~"                // The widget's border.
paddingTop                = "~DEFAULT~"                // top padding
paddingLeft               = "~DEFAULT~"                // left padding
paddingRight              = "~DEFAULT~"                // right padding
paddingBottom             = "~DEFAULT~"                // bottom padding
initialVisibility         = "~DEFAULT~"                // The initial visibility.
background                = "~DEFAULT~"                // The Widget's background (color or image).
font                      = "BiggerFont"               // The used font.
fontColor                 = "~DEFAULT~"                // The Widget's font color in the format #RRGGBB (hex).
fontColor_me              = "~DEFAULT~"                // The font color used for myself in the format #RRGGBB (hex).
fontColor_out             = "~DEFAULT~"                // The font color used for retired drivers in the format #RRGGBB (hex).
fontColor_finished        = "~DEFAULT~"                // The font color used for finished drivers in the format #RRGGBB (hex).
useAutoWidth              = true                       // Automatically compute and display the width?
initialView               = "~DEFAULT~"                // the initial kind of standings view. Valid values: RELATIVE_TO_LEADER, RELATIVE_TO_ME.
forceLeaderDisplayed      = "~DEFAULT~"                // Display leader regardless of maximum displayed drivers setting?
nameDisplayType           = "~DEFAULT~"                // How to display driver names.
showLapsOrStops           = "~DEFAULT~"                // Whether to show the number of laps or stops done or not.
abbreviate                = "~DEFAULT~"                // Whether to abbreviate "Stops", or not.
showTopspeeds             = false                      // Whether to show a topspeeds column or not.

[Widget::FuelWidget1]
class                     = "net.ctdp.rfdynhud.widgets.standard.fuel.FuelWidget" // The Java class, that defines the Widget.
positioning               = TOP_RIGHT                  // The way, position coordinates are interpreted (relative to). Valid values: TOP_LEFT, TOP_CENTER, TOP_RIGHT, CENTER_LEFT, CENTER_CENTER, CENTER_RIGHT, BOTTOM_LEFT, BOTTOM_CENTER, BOTTOM_RIGHT.
x                         = 0.5859375%                 // The x-coordinate for the position.
y                         = 65.72266%                  // The y-coordinate for the position.
zIndex                    = "~DEFAULT~"                // A z-index, to sort Widgets by.
width                     = 17.773438%                 // The width. Use negative values to make the Widget be sized relative to screen size.
height                    = 13.4765625%                // The height. Use negative values to make the Widget be sized relative to screen size.
border                    = "~DEFAULT~"                // The widget's border.
paddingTop                = "~DEFAULT~"                // top padding
paddingLeft               = "~DEFAULT~"                // left padding
paddingRight              = "~DEFAULT~"                // right padding
paddingBottom             = "~DEFAULT~"                // bottom padding
initialVisibility         = "~DEFAULT~"                // The initial visibility.
background                = "~DEFAULT~"                // The Widget's background (color or image).
font                      = "StandardFont2"            // The used font.
fontColor                 = "~DEFAULT~"                // The Widget's font color in the format #RRGGBB (hex).
font2                     = "~DEFAULT~"                // The used (smaller) font.
displayFuelBar            = "~DEFAULT~"                // Render the fuel bar?
displayTankSize           = "~DEFAULT~"                // Display the tank size information?
displayFuelLoad           = "~DEFAULT~"                // Display fuel load information?
displayFuelWeight         = "~DEFAULT~"                // Display fuel weight information?
displayFuelLaps           = "~DEFAULT~"                // Display fuel load in laps?
displayFuelUsage          = "~DEFAULT~"                // Display fuel usage information?
displayPitstopInfo        = "~DEFAULT~"                // Display pitstop calculation information?
horizontalFuelBar         = "~DEFAULT~"                // Whether to render the fuel bar as a horizontal instead of a vertical bar.
fuelBarImage              = "~DEFAULT~"                // An image to paint the fuel bar from.
fuelBarBackgroundColor    = "~DEFAULT~"                // The color used for the fuel bar's background.
fuelBarColor              = "~DEFAULT~"                // The color used for the fuel bar.
tankSizeFont              = "Dialog|PLAIN|9v"          // The used font for max fuel load (tank size).
fuelFont                  = "Dialog|BOLD|13va"         // The used font for fuel load.
fuelFontColor             = "~DEFAULT~"                // The color to use for fuel load in the format #RRGGBB (hex).
roundUpRemainingLaps      = true                       // Round up remaining fuel laps to include the current lap?
lowFuelWarningImageOff    = "~DEFAULT~"                // Image name for the off-state of the low fuel warning.
lowFuelWarningImageOn     = "~DEFAULT~"                // Image name for the on-state of the low fuel warning.
lowFuelWarningImagePositioning = TOP_RIGHT             // Positioning type for the low-fuel-warning image.
lowFuelWarningImagePositionX = 4px                     // X-position for the low-fuel-warning image.
lowFuelWarningImagePositionY = 2px                     // Y-position for the low-fuel-warning image.
lowFuelWarningImageHeight = 20.019531%                 // Height for the low-fuel-warning image.
lowFuelWarningLaps        = "~DEFAULT~"                // Number of laps to start warning before out of fuel.
lowFuelBlinkTime          = "~DEFAULT~"                // Blink time in milli seconds for low fuel warning (0 to disable).

[Widget::RevMeterWidget1]
class                     = "net.ctdp.rfdynhud.widgets.standard.revmeter.RevMeterWidget" // The Java class, that defines the Widget.
positioning               = BOTTOM_CENTER              // The way, position coordinates are interpreted (relative to). Valid values: TOP_LEFT, TOP_CENTER, TOP_RIGHT, CENTER_LEFT, CENTER_CENTER, CENTER_RIGHT, BOTTOM_LEFT, BOTTOM_CENTER, BOTTOM_RIGHT.
x                         = 24.902344%                 // The x-coordinate for the position.
y                         = 7.5195312%                 // The y-coordinate for the position.
zIndex                    = "~DEFAULT~"                // A z-index, to sort Widgets by.
width                     = 16.308594%                 // The width. Use negative values to make the Widget be sized relative to screen size.
height                    = 21.777344%                 // The height. Use negative values to make the Widget be sized relative to screen size.
border                    = "N/A"                      // The widget's border.
paddingTop                = "~DEFAULT~"                // top padding
paddingLeft               = "~DEFAULT~"                // left padding
paddingRight              = "~DEFAULT~"                // right padding
paddingBottom             = "~DEFAULT~"                // bottom padding
initialVisibility         = "~DEFAULT~"                // The initial visibility.
background                = "~DEFAULT~"                // The Widget's background (color or image).
font                      = "~DEFAULT~"                // The used font.
fontColor                 = "~DEFAULT~"                // The Widget's font color in the format #RRGGBB (hex).
minValue                  = "~DEFAULT~"                // The minimum value accepted for the markers and needle
maxValue                  = "~DEFAULT~"                // The maximum value accepted for the markers and needle
displayMarkers            = "~DEFAULT~"                // Display markers?
displayMarkerNumbers      = "~DEFAULT~"                // Display marker numbers?
markerNumbersInside       = "~DEFAULT~"                // Render marker numbers inside of the markers?
markersInnerRadius        = "~DEFAULT~"                // The inner radius of the markers (in background image space)
markersLength             = "~DEFAULT~"                // The length of the markers (in background image space)
markersOnCircle           = "~DEFAULT~"                // Draw markers on circle, even if the Widget has an aspect ratio unequal to 1.0
firstMarkerNumberOffset   = "~DEFAULT~"                // The rotational offset in clockwise degrees for the first marker number.
lastMarkerNumberOffset    = "~DEFAULT~"                // The rotational offset in clockwise degrees for the last marker number.
markersBigStep            = "~DEFAULT~"                // Step size of bigger rev markers
markersSmallStep          = "~DEFAULT~"                // Step size of smaller rev markers
lastMarkerBig             = "~DEFAULT~"                // Whether to force the last marker to be treated as a big one.
markersColor              = "~DEFAULT~"                // The color used to draw the markers.
markersFont               = "~DEFAULT~"                // The font used to draw the marker numbers.
markersFontColor          = "~DEFAULT~"                // The font color used to draw the marker numbers.
markersFontDropShadowColor= "~DEFAULT~"                // The font color for the marker numbers drop shadow.
markerNumbersCentered     = "~DEFAULT~"                // Draw marker numbers at their centers at an equal distance around needle mount?
useMaxRevLimit            = "~DEFAULT~"                // Whether to use maximum possible (by setup) rev limit
revMarkersMediumColor     = "~DEFAULT~"                // The color used to draw the rev markers for medium boost.
revMarkersHighColor       = "~DEFAULT~"                // The color used to draw the rev markers for high revs.
fillHighBackground        = true                       // Fill the rev markers' background with medium and high color instead of coloring the markers.
interpolateMarkerColors   = "~DEFAULT~"                // Interpolate medium and high colors.
needleImageName           = "~DEFAULT~"                // The name of the needle image.
needleMountX              = "~DEFAULT~"                // The x-offset in background image pixels to the needle mount (-1 for center).
needleMountY              = "~DEFAULT~"                // The y-offset in background image pixels to the needle mount (-1 for center).
needlePivotBottomOffset   = "~DEFAULT~"                // The offset in (unscaled) pixels from the bottom of the image, where the center of the needle's axis is.
needleRotationForMinValue = "~DEFAULT~"                // The rotation for the needle image, that it has for min value (in degrees).
needleRotationForMaxValue = "~DEFAULT~"                // The rotation for the needle image, that it has for max value (in degrees).
peakNeedleImageName       = "~DEFAULT~"                // The name of the peak needle image.
peakNeedlePivotBottomOffset = "~DEFAULT~"              // The offset in (unscaled) pixels from the bottom of the image, where the center of the peak needle's axis is.
peakNeedleWaitTime        = "~DEFAULT~"                // The time in milliseconds to let the peak needle stay at the peak value.
peakNeedleCooldown        = "~DEFAULT~"                // The time in milliseconds, that the peak needle takes to go down from max RPM to zero.
peakNeedleDownshiftIgnoreTime = 300                    // The time in milliseconds to ignore current revs after a downshift.
displayValue              = "~DEFAULT~"                // Display the digital value?
valueBackgroundImageName  = "~DEFAULT~"                // The name of the image to render behind the value number.
valuePosX                 = "~DEFAULT~"                // The x-offset in pixels to the value label.
valuePosY                 = "~DEFAULT~"                // The y-offset in pixels to the value label.
valueFont                 = "~DEFAULT~"                // The font used to draw the value.
valueFontColor            = "~DEFAULT~"                // The font color used to draw the value.
hideWhenViewingOtherCar   = "~DEFAULT~"                // Hide the Widget when another car is being observed?
displayGear               = "~DEFAULT~"                // Display the gear?
gearBackgroundImageName   = "~DEFAULT~"                // The name of the image to render behind the gear number.
gearPosX                  = "~DEFAULT~"                // The x-offset in pixels to the gear label.
gearPosY                  = "~DEFAULT~"                // The y-offset in pixels to the gear label.
gearFont                  = "~DEFAULT~"                // The font used to draw the gear.
gearFontColor             = "~DEFAULT~"                // The font color used to draw the gear.
numShiftLights            = 2                          // The number of shift lights to render.
shiftLightImageNameOff1   = "~DEFAULT~"                // The name of the shift light image for "off" state.
shiftLightImageNameOn1    = "~DEFAULT~"                // The name of the shift light image for "on" state.
shiftLightPosX1           = "~DEFAULT~"                // The x-offset in background image pixels for the shift light image.
shiftLightPosY1           = "~DEFAULT~"                // The y-offset in background image pixels for the shift light image.
shiftLightHeight1         = "~DEFAULT~"                // The height in background image pixels for the shift light image
shiftLightRPM1            = -200                       // The RPM (rounds per minute) to subtract from the maximum for the level to display shoft light on
shiftLightImageNameOff2   = "~DEFAULT~"                // The name of the shift light image for "off" state.
shiftLightImageNameOn2    = "~DEFAULT~"                // The name of the shift light image for "on" state.
shiftLightPosX2           = "~DEFAULT~"                // The x-offset in background image pixels for the shift light image.
shiftLightPosY2           = "~DEFAULT~"                // The y-offset in background image pixels for the shift light image.
shiftLightHeight2         = "~DEFAULT~"                // The height in background image pixels for the shift light image
shiftLightRPM2            = -600                       // The RPM (rounds per minute) to subtract from the maximum for the level to display shoft light on
displayBoostBar           = "~DEFAULT~"                // Display a graphical bar for engine boost mapping?
boostBarPosX              = "~DEFAULT~"                // The x-position of the boost bar.
boostBarPosY              = "~DEFAULT~"                // The y-position of the boost bar.
boostBarWidth             = "~DEFAULT~"                // The width of the boost bar.
boostBarHeight            = "~DEFAULT~"                // The height of the boost bar.
displayBoostNumber        = false                      // Display a number for engine boost mapping?
boostNumberBackgroundImageName = "~DEFAULT~"           // The name of the image to render behind the boost number.
boostNumberPosX           = "~DEFAULT~"                // The x-position of the boost number.
boostNumberPosY           = "~DEFAULT~"                // The y-position of the boost number.
boostNumberFont           = "~DEFAULT~"                // The font used to draw the boost number.
boostNumberFontColor      = "~DEFAULT~"                // The font color used to draw the boost bar.
displayRPMString1         = "~DEFAULT~"                // whether to display the digital RPM/Revs string or not
displayCurrRPM1           = "~DEFAULT~"                // whether to display the current revs or to hide them
displayMaxRPM1            = "~DEFAULT~"                // whether to display the maximum revs or to hide them
useBoostRevLimit1         = "~DEFAULT~"                // whether to use boost level to display max RPM
rpmPosX1                  = "~DEFAULT~"                // The offset in (background image space) pixels from the right of the Widget, where the text is to be placed.
rpmPosY1                  = "~DEFAULT~"                // The offset in (background image space) pixels from the top of the Widget, where the text is to be placed.
rpmFont1                  = "~DEFAULT~"                // The font used to draw the RPM.
rpmFontColor1             = "~DEFAULT~"                // The font color used to draw the RPM.
rpmJoinString1            = "~DEFAULT~"                // The String to use to join the current and max RPM.
displayRPMString2         = "~DEFAULT~"                // whether to display the digital RPM/Revs string or not
displayCurrRPM2           = "~DEFAULT~"                // whether to display the current revs or to hide them
displayMaxRPM2            = "~DEFAULT~"                // whether to display the maximum revs or to hide them
useBoostRevLimit2         = "~DEFAULT~"                // whether to use boost level to display max RPM
rpmPosX2                  = "~DEFAULT~"                // The offset in (background image space) pixels from the right of the Widget, where the text is to be placed.
rpmPosY2                  = "~DEFAULT~"                // The offset in (background image space) pixels from the top of the Widget, where the text is to be placed.
rpmFont2                  = "~DEFAULT~"                // The font used to draw the RPM.
rpmFontColor2             = "~DEFAULT~"                // The font color used to draw the RPM.
rpmJoinString2            = "~DEFAULT~"                // The String to use to join the current and max RPM.

[Widget::ETVTimingWidget1]
class                     = "net.ctdp.rfdynhud.widgets.etv2010.timing.ETVTimingWidget" // The Java class, that defines the Widget.
positioning               = TOP_LEFT                   // The way, position coordinates are interpreted (relative to). Valid values: TOP_LEFT, TOP_CENTER, TOP_RIGHT, CENTER_LEFT, CENTER_CENTER, CENTER_RIGHT, BOTTOM_LEFT, BOTTOM_CENTER, BOTTOM_RIGHT.
x                         = 0.48828125%                // The x-coordinate for the position.
y                         = 75.09766%                  // The y-coordinate for the position.
zIndex                    = "~DEFAULT~"                // A z-index, to sort Widgets by.
width                     = 20.019531%                 // The width. Use negative values to make the Widget be sized relative to screen size.
height                    = 8.496094%                  // The height. Use negative values to make the Widget be sized relative to screen size.
border                    = "N/A"                      // The widget's border.
paddingTop                = "~DEFAULT~"                // top padding
paddingLeft               = "~DEFAULT~"                // left padding
paddingRight              = "~DEFAULT~"                // right padding
paddingBottom             = "~DEFAULT~"                // bottom padding
initialVisibility         = "~DEFAULT~"                // The initial visibility.
background                = "~DEFAULT~"                // The Widget's background (color or image).
font                      = "ETVFont"                  // The used font.
fontColor                 = "ETVDataFontColor"         // The Widget's font color in the format #RRGGBB (hex).
useImages                 = "~DEFAULT~"                // Whether to use images to render the items.
imagesIni                 = "~DEFAULT~"                // The ini file, that configures the background images.
captionBgColor            = "~DEFAULT~"                // The background color for the "Lap" caption.
captionColor              = "~DEFAULT~"                // The font color for the "Lap" caption.
dataBgColor               = "~DEFAULT~"                // The background color for the data fields.
itemGap                   = "~DEFAULT~"                // The gap between the elements in pixels.
showNamesInAllUppercase   = "~DEFAULT~"                // Whether to display names in all upper case.
captionBgColor1st         = "~DEFAULT~"                // The background color for the "Position" caption for first place.
dataBgColor1st            = "~DEFAULT~"                // The background color for the data area, for first place.
dataBgColorFastest        = "~DEFAULT~"                // The background color for the data area, if a driver made the absolute fastest lap.
dataBgColorFaster         = "~DEFAULT~"                // The background color for the data area, if a negative gap is displayed.
dataBgColorSlower         = "~DEFAULT~"                // The background color for the data area, if a positive gap is displayed.
dataColorFastest          = "~DEFAULT~"                // The font color for the data area, if a driver made the absolute fastest lap.
dataColorFaster           = "~DEFAULT~"                // The font color for the data area, if a negative gap is displayed.
dataColorSlower           = "~DEFAULT~"                // The font color for the data area, if a positive gap is displayed.
visibleInRaceSession      = "~DEFAULT~"                // Whether this Widget is displayed at all in the race session.
displayType               = "~DEFAULT~"                // Always display or just at sector boundaries or always if valid time was made?
positionFontSize          = "~DEFAULT~"                // Font size for the position in percent relative to the normal font size.
alwaysShowFull1000        = "~DEFAULT~"                // Show full thousands in compare time, even if sector not completed?
positionItemGap           = "~DEFAULT~"                // The gap between the main elements and the position element in pixels.

[Widget::ControlsWidget1]
class                     = "net.ctdp.rfdynhud.widgets.standard.controls.ControlsWidget" // The Java class, that defines the Widget.
positioning               = BOTTOM_CENTER              // The way, position coordinates are interpreted (relative to). Valid values: TOP_LEFT, TOP_CENTER, TOP_RIGHT, CENTER_LEFT, CENTER_CENTER, CENTER_RIGHT, BOTTOM_LEFT, BOTTOM_CENTER, BOTTOM_RIGHT.
x                         = -12.988281%                // The x-coordinate for the position.
y                         = 8.105469%                  // The y-coordinate for the position.
zIndex                    = "~DEFAULT~"                // A z-index, to sort Widgets by.
width                     = 9.863281%                  // The width. Use negative values to make the Widget be sized relative to screen size.
height                    = 16.503906%                 // The height. Use negative values to make the Widget be sized relative to screen size.
border                    = "~DEFAULT~"                // The widget's border.
paddingTop                = 3                          // top padding
paddingLeft               = 3                          // left padding
paddingRight              = 3                          // right padding
paddingBottom             = 3                          // bottom padding
initialVisibility         = "~DEFAULT~"                // The initial visibility.
background                = "~DEFAULT~"                // The Widget's background (color or image).
font                      = "DokChampa|BOLD|22va"      // The used font.
fontColor                 = "#FFFFFF"                  // The Widget's font color in the format #RRGGBB (hex).
horizontalBars            = "~DEFAULT~"                // Extend the bars horizontally instead of vertically?
swapThrottleAndBrake      = "~DEFAULT~"                // Swap throttle and brake order?
displayClutch             = "~DEFAULT~"                // Display the clutch bar?
clutchImage               = "~DEFAULT~"                // The image for the clutch bar. (overrules the color)
clutchColor               = "~DEFAULT~"                // The color used for the clutch bar in the format #RRGGBB (hex).
displayBrake              = "~DEFAULT~"                // Display the brake bar?
brakeImage                = "~DEFAULT~"                // The image for the brake bar. (overrules the color)
brakeColor                = "~DEFAULT~"                // The color used for the brake bar in the format #RRGGBB (hex).
displayThrottle           = "~DEFAULT~"                // Display the throttle bar?
throttleImage             = "~DEFAULT~"                // The image for the throttle bar. (overrules the color)
throttleColor             = "~DEFAULT~"                // The color used for the throttle bar in the format #RRGGBB (hex).
gap                       = "~DEFAULT~"                // Gap between the bars
labelOffset               = "~DEFAULT~"                // The offset for bar text from the left or bottom boundary of the bar.

[Widget::TrackPositionWidget1]
class                     = "net.ctdp.rfdynhud.widgets.standard.trackposition.TrackPositionWidget" // The Java class, that defines the Widget.
positioning               = BOTTOM_LEFT                // The way, position coordinates are interpreted (relative to). Valid values: TOP_LEFT, TOP_CENTER, TOP_RIGHT, CENTER_LEFT, CENTER_CENTER, CENTER_RIGHT, BOTTOM_LEFT, BOTTOM_CENTER, BOTTOM_RIGHT.
x                         = 0.0%                       // The x-coordinate for the position.
y                         = 0.0%                       // The y-coordinate for the position.
zIndex                    = "~DEFAULT~"                // A z-index, to sort Widgets by.
width                     = 70.01953%                  // The width. Use negative values to make the Widget be sized relative to screen size.
height                    = 5.859375%                  // The height. Use negative values to make the Widget be sized relative to screen size.
border                    = "~DEFAULT~"                // The widget's border.
paddingTop                = "~DEFAULT~"                // top padding
paddingLeft               = "~DEFAULT~"                // left padding
paddingRight              = "~DEFAULT~"                // right padding
paddingBottom             = "~DEFAULT~"                // bottom padding
initialVisibility         = "~DEFAULT~"                // The initial visibility.
background                = "~DEFAULT~"                // The Widget's background (color or image).
font                      = "PositionItemFont"         // The used font.
fontColor                 = "PositionItemFontColor"    // The Widget's font color in the format #RRGGBB (hex).
lineColor                 = "~DEFAULT~"                // Color for the base line.
itemRadius                = "~DEFAULT~"                // The abstract radius for any displayed driver item.
markColorNormal           = "~DEFAULT~"                // The color used for all, but special cars in #RRGGBBAA (hex).
markColorLeader           = "~DEFAULT~"                // The color used for the leader's car in #RRGGBBAA (hex).
markColorMe               = "~DEFAULT~"                // The color used for your own car in #RRGGBBAA (hex).
useMyColorForMe1st        = "~DEFAULT~"                // Use 'markColorMe' for my item when I am at 1st place?
markColorNextInFront      = "~DEFAULT~"                // The color used for the car in front of you in #RRGGBBAA (hex).
markColorNextBehind       = "~DEFAULT~"                // The color used for the car behind you in #RRGGBBAA (hex).
displayPosNumbers         = "~DEFAULT~"                // Display numbers on the position markers?
displayNameLabels         = "~DEFAULT~"                // Display name label near the position markers?
nameLabelPos              = "~DEFAULT~"                // Positioning of the name labels.
nameLabelFont             = "~DEFAULT~"                // Font for the name labels.
nameLabelFontColor        = "~DEFAULT~"                // Font color for the name labels.
