[Meta]
# The data in this section is only for informational purposes
# and will not be used when the config is loaded.
# Modifications here may not change anything.
rfDynHUD_Version          = "1.2.0-Beta (build 92)"
Design_Resolution         = "1920x1200"
Design_Grid               = "(0,0;10,10)"

[Global]
useClassScoring           = false                      // Ignore vehicles from other classes than the viewed one for scoring?

[NamedColors]
ETVCaptionBackgroundColor = #787878
ETVCaptionBackgroundColor1st = #B10000
ETVCaptionFontColor       = #FFFFFF
ETVDataBackgroundColor    = #000000
ETVDataBackgroundColor1st = #230000
ETVDataBackgroundColorFaster = #008800
ETVDataBackgroundColorFastest = #C000D2
ETVDataBackgroundColorSlower = #BAB802
ETVDataFontColor          = #FFFFFF
ETVDataFontColorFaster    = #FFFFFF
ETVDataFontColorFasterst  = #000000
ETVDataFontColorSlower    = #000000
PositionItemColorLeader   = #FF0000C0
PositionItemColorMe       = #00FF00C0
PositionItemColorNextBehind = #FFFF00C0
PositionItemColorNextInFront = #0000FFC0
PositionItemColorNormal   = #FFFFFFC0
PositionItemFontColor     = #000000
StandardBackground        = #00000096
StandardFontColor         = #C0BC3D

[NamedFonts]
BiggerFont                = "Dialog|BOLD|14va"
ETVControlsLabelFont      = "DokChampa|BOLD|18va"
ETVFont                   = "DokChampa|BOLD|16va"
ETVGearFont               = "DokChampa|BOLD|30va"
ETVRevMarkersFont         = "DokChampa|BOLD|18va"
ETVVelocityFont           = "DokChampa|BOLD|18va"
PositionItemFont          = "Verdana|BOLD|9va"
SmallerFont               = "Monospaced|BOLD|9va"
StandardFont              = "Dialog|BOLD|13va"
StandardFont2             = "Dialog|BOLD|12va"
StandardFont3             = "Dialog|BOLD|11va"

[BorderAliases]
StandardBorder            = "backgroundcolor_border.ini"

[Widget::RideHeightWidget1]
class                     = "net.ctdp.rfdynhud.widgets.standard.rideheight.RideHeightWidget" // The Java class, that defines the Widget.
positioning               = TOP_LEFT                   // The way, position coordinates are interpreted (relative to). Valid values: TOP_LEFT, TOP_CENTER, TOP_RIGHT, CENTER_LEFT, CENTER_CENTER, CENTER_RIGHT, BOTTOM_LEFT, BOTTOM_CENTER, BOTTOM_RIGHT.
x                         = 22.637363%                 // The x-coordinate for the position.
y                         = 2.2460938%                 // The y-coordinate for the position.
zIndex                    = 0                          // A z-index, to sort Widgets by.
width                     = 8.7%                       // The width. Use negative values to make the Widget be sized relative to screen size.
height                    = 6.8%                       // The height. Use negative values to make the Widget be sized relative to screen size.
border                    = "StandardBorder"           // The widget's border.
paddingTop                = 0                          // top padding
paddingLeft               = 0                          // left padding
paddingRight              = 0                          // right padding
paddingBottom             = 0                          // bottom padding
initialVisibility         = true                       // The initial visibility.
background                = "color:StandardBackground" // The Widget's background (color or image).
font                      = "StandardFont"             // The used font.
fontColor                 = "StandardFontColor"        // The Widget's font color in the format #RRGGBB (hex).
displayHeader             = true                       // Whether to display the header or not.
headerFont                = "StandardFont"             // Font for the header.
headerFontColor           = "StandardFontColor"        // Font color for the header

[Widget::TinyPositionWidget1]
class                     = "net.ctdp.rfdynhud.widgets.standard.tinyposition.TinyPositionWidget" // The Java class, that defines the Widget.
positioning               = TOP_RIGHT                  // The way, position coordinates are interpreted (relative to). Valid values: TOP_LEFT, TOP_CENTER, TOP_RIGHT, CENTER_LEFT, CENTER_CENTER, CENTER_RIGHT, BOTTOM_LEFT, BOTTOM_CENTER, BOTTOM_RIGHT.
x                         = 21.758242%                 // The x-coordinate for the position.
y                         = 3.2226562%                 // The y-coordinate for the position.
zIndex                    = 0                          // A z-index, to sort Widgets by.
width                     = 10.256411%                 // The width. Use negative values to make the Widget be sized relative to screen size.
height                    = 5.078125%                  // The height. Use negative values to make the Widget be sized relative to screen size.
border                    = ""                         // The widget's border.
paddingTop                = 0                          // top padding
paddingLeft               = 0                          // left padding
paddingRight              = 0                          // right padding
paddingBottom             = 0                          // bottom padding
initialVisibility         = true                       // The initial visibility.
background                = "color:#00000000"          // The Widget's background (color or image).
font                      = "DS-DIGITAL|PLAIN|60va"    // The used font.
fontColor                 = "#BBBBBB"                  // The Widget's font color in the format #RRGGBB (hex).

[Widget::MiscWidget1]
class                     = "net.ctdp.rfdynhud.widgets.standard.misc.MiscWidget" // The Java class, that defines the Widget.
positioning               = TOP_CENTER                 // The way, position coordinates are interpreted (relative to). Valid values: TOP_LEFT, TOP_CENTER, TOP_RIGHT, CENTER_LEFT, CENTER_CENTER, CENTER_RIGHT, BOTTOM_LEFT, BOTTOM_CENTER, BOTTOM_RIGHT.
x                         = 0.0%                       // The x-coordinate for the position.
y                         = 11.230469%                 // The y-coordinate for the position.
zIndex                    = 0                          // A z-index, to sort Widgets by.
width                     = 50.18315%                  // The width. Use negative values to make the Widget be sized relative to screen size.
height                    = 6.0546875%                 // The height. Use negative values to make the Widget be sized relative to screen size.
border                    = "StandardBorder"           // The widget's border.
paddingTop                = 0                          // top padding
paddingLeft               = 0                          // left padding
paddingRight              = 0                          // right padding
paddingBottom             = 0                          // bottom padding
initialVisibility         = true                       // The initial visibility.
background                = "color:StandardBackground" // The Widget's background (color or image).
font                      = "StandardFont"             // The used font.
fontColor                 = "StandardFontColor"        // The Widget's font color in the format #RRGGBB (hex).
displayScoring            = true                       // Display the scoring part of the Widget?
displayTiming             = true                       // Display the timing part of the Widget?
displayVelocity           = false                      // Display the velocity and top speed part of the Widget?
relTopspeedResetDelay     = 10000                      // The delay after which the relative topspeed is resetted (in milliseconds).

[Widget::WearWidget1]
class                     = "net.ctdp.rfdynhud.widgets.standard.wear.WearWidget" // The Java class, that defines the Widget.
positioning               = TOP_RIGHT                  // The way, position coordinates are interpreted (relative to). Valid values: TOP_LEFT, TOP_CENTER, TOP_RIGHT, CENTER_LEFT, CENTER_CENTER, CENTER_RIGHT, BOTTOM_LEFT, BOTTOM_CENTER, BOTTOM_RIGHT.
x                         = 0.5860806%                 // The x-coordinate for the position.
y                         = 15.332031%                 // The y-coordinate for the position.
zIndex                    = 0                          // A z-index, to sort Widgets by.
width                     = 17.773438%                 // The width. Use negative values to make the Widget be sized relative to screen size.
height                    = 24.414062%                 // The height. Use negative values to make the Widget be sized relative to screen size.
border                    = "StandardBorder"           // The widget's border.
paddingTop                = 0                          // top padding
paddingLeft               = 0                          // left padding
paddingRight              = 0                          // right padding
paddingBottom             = 0                          // bottom padding
initialVisibility         = true                       // The initial visibility.
background                = "color:StandardBackground" // The Widget's background (color or image).
font                      = "StandardFont"             // The used font.
fontColor                 = "StandardFontColor"        // The Widget's font color in the format #RRGGBB (hex).
font2                     = "SmallerFont"              // The used (smaller) font.
displayEngine             = true                       // Display the engine part of the Widget?
engineHeight              = 5.6640625%                 // The height of the engine bar.
hundredPercentBase        = SAFE_RANGE                 // The value range to be used as 100% base.
displayWearPercent        = true                       // Display wear in percentage numbers?
engineEstimationImage     = "standard/start_finish.png" // Image to display where the engine is expected to explode.
engineFailImage           = "standard/explode.png"     // Image to display, if the engine WILL fail before the end of the race.
displayTires              = true                       // Display the tire part of the Widget?
displayCompoundName       = false                      // Display the tire compound name in the header?
tireIcon                  = "standard/tire_small.png"  // The image name for the tire icon.
tireWidth                 = 10.253906%                 // The width of a tire image.
tireHeight                = 11.71875%                  // The height of a tire image.
swapTireWearGripMeaning   = false                      // Swap bar and line display for wear and grip?
displayBrakes             = true                       // Display the brakes of the Widget?
brakeDiscIcon             = "standard/brake_disc_small.png" // The image name for the brake disc icon.
brakeWidth                = 6.7382812%                 // The width of a brake image.
brakeHeight               = 17.773438%                 // The height of a brake image.

[Widget::ETVSessionStateWidget1]
class                     = "net.ctdp.rfdynhud.widgets.etv2010.sessionstate.ETVSessionStateWidget" // The Java class, that defines the Widget.
positioning               = TOP_CENTER                 // The way, position coordinates are interpreted (relative to). Valid values: TOP_LEFT, TOP_CENTER, TOP_RIGHT, CENTER_LEFT, CENTER_CENTER, CENTER_RIGHT, BOTTOM_LEFT, BOTTOM_CENTER, BOTTOM_RIGHT.
x                         = 0.0%                       // The x-coordinate for the position.
y                         = 19.042969%                 // The y-coordinate for the position.
zIndex                    = 0                          // A z-index, to sort Widgets by.
width                     = 155px                      // The width. Use negative values to make the Widget be sized relative to screen size.
height                    = 2.5390625%                 // The height. Use negative values to make the Widget be sized relative to screen size.
border                    = "N/A"                      // The widget's border.
paddingTop                = 0                          // top padding
paddingLeft               = 0                          // left padding
paddingRight              = 0                          // right padding
paddingBottom             = 0                          // bottom padding
initialVisibility         = true                       // The initial visibility.
background                = "color:#00000000"          // The Widget's background (color or image).
font                      = "ETVFont"                  // The used font.
fontColor                 = "ETVDataFontColor"         // The Widget's font color in the format #RRGGBB (hex).
useImages                 = true                       // Whether to use images to render the items.
imagesIni                 = "etv2010/general/etv_2010_images.ini" // The ini file, that configures the background images.
captionBgColor            = "ETVCaptionBackgroundColor" // The background color for the "Lap" caption.
captionColor              = "ETVCaptionFontColor"      // The font color for the "Lap" caption.
dataBgColor               = "ETVDataBackgroundColor"   // The background color for the data fields.
itemGap                   = 3                          // The gap between the elements in pixels.
showNamesInAllUppercase   = true                       // Whether to display names in all upper case.
sessionLimitPreference    = LAPS                       // If a session is limited by both laps and time, this limit will be displayed.

[Widget::ETVTelemetryWidget1]
class                     = "net.ctdp.rfdynhud.widgets.etv2010.telemetry.ETVTelemetryWidget" // The Java class, that defines the Widget.
positioning               = TOP_LEFT                   // The way, position coordinates are interpreted (relative to). Valid values: TOP_LEFT, TOP_CENTER, TOP_RIGHT, CENTER_LEFT, CENTER_CENTER, CENTER_RIGHT, BOTTOM_LEFT, BOTTOM_CENTER, BOTTOM_RIGHT.
x                         = 1.6117218%                 // The x-coordinate for the position.
y                         = 19.140625%                 // The y-coordinate for the position.
zIndex                    = 0                          // A z-index, to sort Widgets by.
width                     = 19.691498%                 // The width. Use negative values to make the Widget be sized relative to screen size.
height                    = 21.75%                     // The height. Use negative values to make the Widget be sized relative to screen size.
border                    = ""                         // The widget's border.
paddingTop                = 0                          // top padding
paddingLeft               = 0                          // left padding
paddingRight              = 0                          // right padding
paddingBottom             = 0                          // bottom padding
initialVisibility         = true                       // The initial visibility.
background                = "image:etv2010/telemetry/background.png" // The Widget's background (color or image).
font                      = "StandardFont"             // The used font.
fontColor                 = "StandardFontColor"        // The Widget's font color in the format #RRGGBB (hex).
minValue                  = 4000.0                     // The minimum value accepted for the markers and needle
maxValue                  = 1.0E9                      // The maximum value accepted for the markers and needle
displayMarkers            = false                      // Display markers?
displayMarkerNumbers      = true                       // Display marker numbers?
markerNumbersInside       = false                      // Render marker numbers inside of the markers?
markersInnerRadius        = 170                        // The inner radius of the markers (in background image space)
markersLength             = 50                         // The length of the markers (in background image space)
markersOnCircle           = true                       // Draw markers on circle, even if the Widget has an aspect ratio unequal to 1.0
firstMarkerNumberOffset   = 5.0                        // The rotational offset in clockwise degrees for the first marker number.
lastMarkerNumberOffset    = -5.0                       // The rotational offset in clockwise degrees for the last marker number.
markersBigStep            = 2000                       // Step size of bigger rev markers
markersSmallStep          = 1000                       // Step size of smaller rev markers
lastMarkerBig             = false                      // Whether to force the last marker to be treated as a big one.
markersColor              = "#FFFFFF"                  // The color used to draw the markers.
markersFont               = "ETVRevMarkersFont"        // The font used to draw the marker numbers.
markersFontColor          = "#FFFFFF"                  // The font color used to draw the marker numbers.
markersFontDropShadowColor= "#000000"                  // The font color for the marker numbers drop shadow.
markerNumbersCentered     = true                       // Draw marker numbers at their centers at an equal distance around needle mount?
useMaxRevLimit            = true                       // Whether to use maximum possible (by setup) rev limit
needleImageName           = "etv2010/telemetry/needle.png" // The name of the needle image.
needleMountX              = 506                        // The x-offset in background image pixels to the needle mount (-1 for center).
needleMountY              = 350                        // The y-offset in background image pixels to the needle mount (-1 for center).
needlePivotBottomOffset   = -171                       // The offset in (unscaled) pixels from the bottom of the image, where the center of the needle's axis is.
needleRotationForMinValue = -178.0                     // The rotation for the needle image, that it has for min value (in degrees).
needleRotationForMaxValue = 72.5                       // The rotation for the needle image, that it has for max value (in degrees).
peakNeedleImageName       = "etv2010/telemetry/peak_needle.png" // The name of the peak needle image.
peakNeedlePivotBottomOffset = -226                     // The offset in (unscaled) pixels from the bottom of the image, where the center of the peak needle's axis is.
peakNeedleWaitTime        = 1000                       // The time in milliseconds to let the peak needle stay at the peak value.
peakNeedleCooldown        = 1000                       // The time in milliseconds, that the peak needle takes to go down from max RPM to zero.
peakNeedleDownshiftIgnoreTime = 1500                   // The time in milliseconds to ignore current revs after a downshift.
hideWhenViewingOtherCar   = false                      // Hide the Widget when another car is being observed?
displayGear               = true                       // Display the gear?
gearBackgroundImageName   = ""                         // The name of the image to render behind the gear number.
gearPosX                  = 510                        // The x-offset in pixels to the gear label.
gearPosY                  = 345                        // The y-offset in pixels to the gear label.
gearFont                  = "ETVGearFont"              // The font used to draw the gear.
gearFontColor             = "#D9E0EB"                  // The font color used to draw the gear.
displayVelocityNumbers    = true                       // Display nicely positioned velocity numbers?
velocityNumberFont        = "ETVVelocityFont"          // The font for the velocity numbers.
velocityNumberFontColor   = "ETVCaptionFontColor"      // The font color for the velocity numbers.
velocityNumber1PosX       = 270                        // The x-position in background texture space for the first velocity number.
velocityNumber1PosY       = 620                        // The y-position in background texture space for the first velocity number.
velocity2                 = 110                        // The second velocity.
velocityNumber2PosX       = 100                        // The x-position in background texture space for the second velocity number.
velocity3                 = 220                        // The third velocity.
velocityNumber3PosX       = 100                        // The x-position in background texture space for the third velocity number.
velocityNumber4PosX       = 270                        // The x-position in background texture space for the fourth velocity number.
velocityNumber4PosY       = 50                         // The y-position in background texture space for the fourth velocity number.
velocityUnitsPosX         = 300                        // The x-position in background texture space for te units display.
velocityUnitsPosY         = 660                        // The y-position in background texture space for te units display.
maxVelocity               = 340                        // The maximum velocity in km/h.
maxVelocityOverlay        = "etv2010/telemetry/max_velocity.png" // The image name for the max velocity overlay.
maxVelocityLeftOffset     = 15                         // The x-offset in background image space for the max velocity overlay.
maxVelocityTopOffset      = 80                         // The y-offset in background image space for the max velocity overlay.
throttleImage             = "etv2010/telemetry/throttle.png" // The image for the throttle gauge.
brakeImage                = "etv2010/telemetry/brake.png" // The image for the brake gauge.
controlsPosX              = 600                        // The x-offset in background image space for the controls display.
controlsPosY              = 400                        // The y-offset in background image space for the controls display.
controlsWidth             = 350                        // The width in background image space for the controls display.
controlsHeight            = 80                         // The height in background image space for the controls display.
controlsGap               = 2                          // The gap in pixels between the throttle and brake bars.
controlsLabelFont         = "ETVControlsLabelFont"     // The font for the controls labels.
controlsLabelFontColor    = "#FFFFFF"                  // The font color for the controls labels.
controlsLabelOffset       = 15                         // The offset for bar text from the left boundary of the bar.

[Widget::FuelWidget1]
class                     = "net.ctdp.rfdynhud.widgets.standard.fuel.FuelWidget" // The Java class, that defines the Widget.
positioning               = CENTER_RIGHT               // The way, position coordinates are interpreted (relative to). Valid values: TOP_LEFT, TOP_CENTER, TOP_RIGHT, CENTER_LEFT, CENTER_CENTER, CENTER_RIGHT, BOTTOM_LEFT, BOTTOM_CENTER, BOTTOM_RIGHT.
x                         = 0.5860806%                 // The x-coordinate for the position.
y                         = -3.2226562%                // The y-coordinate for the position.
zIndex                    = 0                          // A z-index, to sort Widgets by.
width                     = 17.773438%                 // The width. Use negative values to make the Widget be sized relative to screen size.
height                    = 13.4765625%                // The height. Use negative values to make the Widget be sized relative to screen size.
border                    = "StandardBorder"           // The widget's border.
paddingTop                = 0                          // top padding
paddingLeft               = 0                          // left padding
paddingRight              = 0                          // right padding
paddingBottom             = 0                          // bottom padding
initialVisibility         = true                       // The initial visibility.
background                = "color:StandardBackground" // The Widget's background (color or image).
font                      = "StandardFont2"            // The used font.
fontColor                 = "StandardFontColor"        // The Widget's font color in the format #RRGGBB (hex).
font2                     = "StandardFont3"            // The used (smaller) font.
displayFuelBar            = true                       // Render the fuel bar?
displayTankSize           = true                       // Display the tank size information?
displayFuelLoad           = true                       // Display fuel load information?
displayFuelWeight         = true                       // Display fuel weight information?
displayFuelLaps           = true                       // Display fuel load in laps?
displayFuelUsage          = true                       // Display fuel usage information?
displayPitstopInfo        = true                       // Display pitstop calculation information?
horizontalFuelBar         = false                      // Whether to render the fuel bar as a horizontal instead of a vertical bar.
fuelBarImage              = ""                         // An image to paint the fuel bar from.
fuelBarBackgroundColor    = "#000000"                  // The color used for the fuel bar's background.
fuelBarColor              = "#54760B"                  // The color used for the fuel bar.
tankSizeFont              = "Dialog|PLAIN|9v"          // The used font for max fuel load (tank size).
fuelFont                  = "Dialog|BOLD|13va"         // The used font for fuel load.
fuelFontColor             = "#FFFFFFCD"                // The color to use for fuel load in the format #RRGGBB (hex).
roundUpRemainingLaps      = true                       // Round up remaining fuel laps to include the current lap?
lowFuelWarningImageOff    = "standard/shiftlight_off.png" // Image name for the off-state of the low fuel warning.
lowFuelWarningImageOn     = "standard/shiftlight_on_red.png" // Image name for the on-state of the low fuel warning.
lowFuelWarningImagePositioning = TOP_RIGHT             // Positioning type for the low-fuel-warning image.
lowFuelWarningImagePositionX = 4px                     // X-position for the low-fuel-warning image.
lowFuelWarningImagePositionY = 2px                     // Y-position for the low-fuel-warning image.
lowFuelWarningImageHeight = 20.019531%                 // Height for the low-fuel-warning image.
lowFuelWarningLaps        = 1                          // Number of laps to start warning before out of fuel.
lowFuelBlinkTime          = 500                        // Blink time in milli seconds for low fuel warning (0 to disable).

[Widget::TimeCompareWidget1]
class                     = "net.ctdp.rfdynhud.widgets.standard.timecomp.TimeCompareWidget" // The Java class, that defines the Widget.
positioning               = CENTER_LEFT                // The way, position coordinates are interpreted (relative to). Valid values: TOP_LEFT, TOP_CENTER, TOP_RIGHT, CENTER_LEFT, CENTER_CENTER, CENTER_RIGHT, BOTTOM_LEFT, BOTTOM_CENTER, BOTTOM_RIGHT.
x                         = 0.51282054%                // The x-coordinate for the position.
y                         = 1.5625%                    // The y-coordinate for the position.
zIndex                    = 0                          // A z-index, to sort Widgets by.
width                     = 22.271063%                 // The width. Use negative values to make the Widget be sized relative to screen size.
height                    = 14.0625%                   // The height. Use negative values to make the Widget be sized relative to screen size.
border                    = "StandardBorder"           // The widget's border.
paddingTop                = 0                          // top padding
paddingLeft               = 0                          // left padding
paddingRight              = 0                          // right padding
paddingBottom             = 0                          // bottom padding
initialVisibility         = true                       // The initial visibility.
background                = "color:StandardBackground" // The Widget's background (color or image).
font                      = "StandardFont"             // The used font.
fontColor                 = "StandardFontColor"        // The Widget's font color in the format #RRGGBB (hex).
abbreviate                = false                      // Whether to abbreviate "Sector" to "Sec", or not.
displaySectors            = true                       // Display sector times?

[Widget::StandingsWidget1]
class                     = "net.ctdp.rfdynhud.widgets.standard.standings.StandingsWidget" // The Java class, that defines the Widget.
positioning               = BOTTOM_LEFT                // The way, position coordinates are interpreted (relative to). Valid values: TOP_LEFT, TOP_CENTER, TOP_RIGHT, CENTER_LEFT, CENTER_CENTER, CENTER_RIGHT, BOTTOM_LEFT, BOTTOM_CENTER, BOTTOM_RIGHT.
x                         = 0.5%                       // The x-coordinate for the position.
y                         = 25.5%                      // The y-coordinate for the position.
zIndex                    = 0                          // A z-index, to sort Widgets by.
width                     = 24.125%                    // The width. Use negative values to make the Widget be sized relative to screen size.
height                    = 14.916667%                 // The height. Use negative values to make the Widget be sized relative to screen size.
border                    = "StandardBorder"           // The widget's border.
paddingTop                = 0                          // top padding
paddingLeft               = 0                          // left padding
paddingRight              = 0                          // right padding
paddingBottom             = 0                          // bottom padding
initialVisibility         = true                       // The initial visibility.
background                = "color:StandardBackground" // The Widget's background (color or image).
font                      = "BiggerFont"               // The used font.
fontColor                 = "StandardFontColor"        // The Widget's font color in the format #RRGGBB (hex).
fontColor_me              = "#367727"                  // The font color used for myself in the format #RRGGBB (hex).
fontColor_out             = "#646464"                  // The font color used for retired drivers in the format #RRGGBB (hex).
fontColor_finished        = "#00FF00"                  // The font color used for finished drivers in the format #RRGGBB (hex).
useAutoWidth              = true                       // Automatically compute and display the width?
initialView               = RELATIVE_TO_ME             // the initial kind of standings view. Valid values: RELATIVE_TO_LEADER, RELATIVE_TO_ME.
forceLeaderDisplayed      = true                       // Display leader regardless of maximum displayed drivers setting?
nameDisplayType           = FULL_NAME                  // How to display driver names.
showLapsOrStops           = true                       // Whether to show the number of laps or stops done or not.
abbreviate                = false                      // Whether to abbreviate "Stops", or not.
showTopspeeds             = false                      // Whether to show a topspeeds column or not.

[Widget::ETVTimingWidget2]
class                     = "net.ctdp.rfdynhud.widgets.etv2010.timing.ETVTimingWidget" // The Java class, that defines the Widget.
positioning               = BOTTOM_RIGHT               // The way, position coordinates are interpreted (relative to). Valid values: TOP_LEFT, TOP_CENTER, TOP_RIGHT, CENTER_LEFT, CENTER_CENTER, CENTER_RIGHT, BOTTOM_LEFT, BOTTOM_CENTER, BOTTOM_RIGHT.
x                         = 2.8125%                    // The x-coordinate for the position.
y                         = 24.083332%                 // The y-coordinate for the position.
zIndex                    = 0                          // A z-index, to sort Widgets by.
width                     = 19.999998%                 // The width. Use negative values to make the Widget be sized relative to screen size.
height                    = 8.496094%                  // The height. Use negative values to make the Widget be sized relative to screen size.
border                    = "N/A"                      // The widget's border.
paddingTop                = 0                          // top padding
paddingLeft               = 0                          // left padding
paddingRight              = 0                          // right padding
paddingBottom             = 0                          // bottom padding
initialVisibility         = true                       // The initial visibility.
background                = "color:#00000000"          // The Widget's background (color or image).
font                      = "ETVFont"                  // The used font.
fontColor                 = "ETVDataFontColor"         // The Widget's font color in the format #RRGGBB (hex).
useImages                 = true                       // Whether to use images to render the items.
imagesIni                 = "etv2010/general/etv_2010_images.ini" // The ini file, that configures the background images.
captionBgColor            = "ETVCaptionBackgroundColor" // The background color for the "Lap" caption.
captionColor              = "ETVCaptionFontColor"      // The font color for the "Lap" caption.
dataBgColor               = "ETVDataBackgroundColor"   // The background color for the data fields.
itemGap                   = 3                          // The gap between the elements in pixels.
showNamesInAllUppercase   = true                       // Whether to display names in all upper case.
captionBgColor1st         = "ETVCaptionBackgroundColor1st" // The background color for the "Position" caption for first place.
dataBgColor1st            = "ETVDataBackgroundColor1st" // The background color for the data area, for first place.
dataBgColorFastest        = "ETVDataBackgroundColorFastest" // The background color for the data area, if a driver made the absolute fastest lap.
dataBgColorFaster         = "ETVDataBackgroundColorFaster" // The background color for the data area, if a negative gap is displayed.
dataBgColorSlower         = "ETVDataBackgroundColorSlower" // The background color for the data area, if a positive gap is displayed.
dataColorFastest          = "ETVDataFontColorFasterst" // The font color for the data area, if a driver made the absolute fastest lap.
dataColorFaster           = "ETVDataFontColorFaster"   // The font color for the data area, if a negative gap is displayed.
dataColorSlower           = "ETVDataFontColorSlower"   // The font color for the data area, if a positive gap is displayed.
positionFontSize          = 200                        // Font size for the position in percent relative to the normal font size.
positionItemGap           = 5                          // The gap between the main elements and the position element in pixels.
displayType               = AT_SECTORS                 // Always display or just at sector boundaries or always if valid time was made?
visibleTimeBeforeSector   = 7.0                        // The Widget is visible for the given amount of seconds before the relative sector time is reached.
visibleTimeAfterSector    = 7.0                        // The Widget is visible for the given amount after a sector was finished.

[Widget::ETVTimingWidget1]
class                     = "net.ctdp.rfdynhud.widgets.etv2010.timing.ETVTimingWidget" // The Java class, that defines the Widget.
positioning               = TOP_LEFT                   // The way, position coordinates are interpreted (relative to). Valid values: TOP_LEFT, TOP_CENTER, TOP_RIGHT, CENTER_LEFT, CENTER_CENTER, CENTER_RIGHT, BOTTOM_LEFT, BOTTOM_CENTER, BOTTOM_RIGHT.
x                         = 0.48828125%                // The x-coordinate for the position.
y                         = 75.09766%                  // The y-coordinate for the position.
zIndex                    = 0                          // A z-index, to sort Widgets by.
width                     = 20.019531%                 // The width. Use negative values to make the Widget be sized relative to screen size.
height                    = 8.496094%                  // The height. Use negative values to make the Widget be sized relative to screen size.
border                    = "N/A"                      // The widget's border.
paddingTop                = 0                          // top padding
paddingLeft               = 0                          // left padding
paddingRight              = 0                          // right padding
paddingBottom             = 0                          // bottom padding
initialVisibility         = true                       // The initial visibility.
background                = "color:#00000000"          // The Widget's background (color or image).
font                      = "ETVFont"                  // The used font.
fontColor                 = "ETVDataFontColor"         // The Widget's font color in the format #RRGGBB (hex).
useImages                 = true                       // Whether to use images to render the items.
imagesIni                 = "etv2010/general/etv_2010_images.ini" // The ini file, that configures the background images.
captionBgColor            = "ETVCaptionBackgroundColor" // The background color for the "Lap" caption.
captionColor              = "ETVCaptionFontColor"      // The font color for the "Lap" caption.
dataBgColor               = "ETVDataBackgroundColor"   // The background color for the data fields.
itemGap                   = 3                          // The gap between the elements in pixels.
showNamesInAllUppercase   = true                       // Whether to display names in all upper case.
captionBgColor1st         = "ETVCaptionBackgroundColor1st" // The background color for the "Position" caption for first place.
dataBgColor1st            = "ETVDataBackgroundColor1st" // The background color for the data area, for first place.
dataBgColorFastest        = "ETVDataBackgroundColorFastest" // The background color for the data area, if a driver made the absolute fastest lap.
dataBgColorFaster         = "ETVDataBackgroundColorFaster" // The background color for the data area, if a negative gap is displayed.
dataBgColorSlower         = "ETVDataBackgroundColorSlower" // The background color for the data area, if a positive gap is displayed.
dataColorFastest          = "ETVDataFontColorFasterst" // The font color for the data area, if a driver made the absolute fastest lap.
dataColorFaster           = "ETVDataFontColorFaster"   // The font color for the data area, if a negative gap is displayed.
dataColorSlower           = "ETVDataFontColorSlower"   // The font color for the data area, if a positive gap is displayed.
positionFontSize          = 200                        // Font size for the position in percent relative to the normal font size.
positionItemGap           = 5                          // The gap between the main elements and the position element in pixels.
displayType               = AT_SECTORS                 // Always display or just at sector boundaries or always if valid time was made?
visibleTimeBeforeSector   = 7.0                        // The Widget is visible for the given amount of seconds before the relative sector time is reached.
visibleTimeAfterSector    = 7.0                        // The Widget is visible for the given amount after a sector was finished.

[Widget::TrackPositionWidget1]
class                     = "net.ctdp.rfdynhud.widgets.standard.trackposition.TrackPositionWidget" // The Java class, that defines the Widget.
positioning               = BOTTOM_LEFT                // The way, position coordinates are interpreted (relative to). Valid values: TOP_LEFT, TOP_CENTER, TOP_RIGHT, CENTER_LEFT, CENTER_CENTER, CENTER_RIGHT, BOTTOM_LEFT, BOTTOM_CENTER, BOTTOM_RIGHT.
x                         = 0.0%                       // The x-coordinate for the position.
y                         = 0.0%                       // The y-coordinate for the position.
zIndex                    = 0                          // A z-index, to sort Widgets by.
width                     = 70.01953%                  // The width. Use negative values to make the Widget be sized relative to screen size.
height                    = 5.859375%                  // The height. Use negative values to make the Widget be sized relative to screen size.
border                    = "StandardBorder"           // The widget's border.
paddingTop                = 0                          // top padding
paddingLeft               = 0                          // left padding
paddingRight              = 0                          // right padding
paddingBottom             = 0                          // bottom padding
initialVisibility         = true                       // The initial visibility.
background                = "color:StandardBackground" // The Widget's background (color or image).
font                      = "PositionItemFont"         // The used font.
fontColor                 = "PositionItemFontColor"    // The Widget's font color in the format #RRGGBB (hex).
lineColor                 = "#FFFFFF"                  // Color for the base line.
itemRadius                = 9                          // The abstract radius for any displayed driver item.
markColorNormal           = "PositionItemColorNormal"  // The color used for all, but special cars in #RRGGBBAA (hex).
markColorLeader           = "PositionItemColorLeader"  // The color used for the leader's car in #RRGGBBAA (hex).
markColorMe               = "PositionItemColorMe"      // The color used for your own car in #RRGGBBAA (hex).
useMyColorForMe1st        = false                      // Use 'markColorMe' for my item when I am at 1st place?
markColorNextInFront      = "PositionItemColorNextInFront" // The color used for the car in front of you in #RRGGBBAA (hex).
markColorNextBehind       = "PositionItemColorNextBehind" // The color used for the car behind you in #RRGGBBAA (hex).
displayPosNumbers         = true                       // Display numbers on the position markers?
displayNameLabels         = false                      // Display name label near the position markers?
nameLabelPos              = BELOW                      // Positioning of the name labels.
nameLabelFont             = "PositionItemFont"         // Font for the name labels.
nameLabelFontColor        = "PositionItemColorNormal"  // Font color for the name labels.
