[Meta]
# The data in this section is only for informational purposes
# and will not be used when the config is loaded.
# Modifications here may not change anything.
rfDynHUD_Version          = "1.1.0-Alpha (build 87)"
Design_Resolution         = "1920x1200"
Design_Grid               = "(0,0;10,10)"

[Global]
useClassScoring           = false                      // Ignore vehicles from other classes than the viewed one for scoring?

[NamedColors]
StandardBackground        = #00000096
StandardFontColor         = #C0BC3D

[NamedFonts]
GearFont                  = "Monospaced-BOLD-26va"
StandardFont              = "Monospaced-BOLD-13va"

[BorderAliases]
StandardBorder            = "backgroundcolor_border.ini"

[Widget::DashboardWidget1]
class                     = "net.ctdp.rfdynhud.widgets.dashboard.DashboardWidget" // The Java class, that defines the Widget.
positioning               = TOP_LEFT                   // The way, position coordinates are interpreted (relative to). Valid values: TOP_LEFT, TOP_CENTER, TOP_RIGHT, CENTER_LEFT, CENTER_CENTER, CENTER_RIGHT, BOTTOM_LEFT, BOTTOM_CENTER, BOTTOM_RIGHT.
x                         = 32.75%                     // The x-coordinate for the position.
y                         = 21.25%                     // The y-coordinate for the position.
width                     = 33.6%                      // The width. Use negative values to make the Widget be sized relative to screen size.
height                    = 22.999998%                 // The height. Use negative values to make the Widget be sized relative to screen size.
border                    = "StandardBorder"           // The widget's border.
paddingTop                = 0                          // top padding
paddingLeft               = 0                          // left padding
paddingRight              = 0                          // right padding
paddingBottom             = 0                          // bottom padding
initialVisibility         = true                       // The initial visibility.
background                = "color:StandardBackground" // The Widget's background (color or image).
<WidgetPart>              = "Speedo"                   // The Widget part's name.
class                     = "net.ctdp.rfdynhud.widgets.speedo.SpeedoWidget" // The Java class, that defines the Widget.
positioning               = TOP_LEFT                   // The way, position coordinates are interpreted (relative to). Valid values: TOP_LEFT, TOP_CENTER, TOP_RIGHT, CENTER_LEFT, CENTER_CENTER, CENTER_RIGHT, BOTTOM_LEFT, BOTTOM_CENTER, BOTTOM_RIGHT.
x                         = 0.0%                       // The x-coordinate for the position.
y                         = 0.0%                       // The y-coordinate for the position.
width                     = 44.827587%                 // The width. Use negative values to make the Widget be sized relative to screen size.
height                    = 90.0%                      // The height. Use negative values to make the Widget be sized relative to screen size.
background                = "image:standard/rev_meter_bg.png" // The Widget's background (color or image).
minValue                  = -1.0E9                     // The minimum value accepted for the markers and needle
maxValue                  = 1.0E9                      // The maximum value accepted for the markers and needle
displayMarkers            = true                       // Display markers?
displayMarkerNumbers      = true                       // Display marker numbers?
markerNumbersInside       = false                      // Render marker numbers inside of the markers?
markersInnerRadius        = 224                        // The inner radius of the markers (in background image space)
markersLength             = 50                         // The length of the markers (in background image space)
markersBigStep            = 100                        // Step size of bigger rev markers
markersSmallStep          = 10                         // Step size of smaller rev markers
lastMarkerBig             = true                       // Whether to force the last marker to be treated as a big one.
markersColor              = "#FFFFFF"                  // The color used to draw the markers.
markersFont               = "Monospaced-BOLD-9va"      // The font used to draw the marker numbers.
markersFontColor          = "#FFFFFF"                  // The font color used to draw the marker numbers.
needleImageName           = "standard/rev_meter_needle.png" // The name of the needle image.
needleMountX              = -1                         // The x-offset in background image pixels to the needle mount (-1 for center).
needleMountY              = -1                         // The y-offset in background image pixels to the needle mount (-1 for center).
needlePivotBottomOffset   = 60                         // The offset in (unscaled) pixels from the bottom of the image, where the center of the needle's axis is.
needleRotationForMinValue = -122.4                     // The rotation for the needle image, that it has for min value (in degrees).
needleRotationForMaxValue = 118.8                      // The rotation for the needle image, that it has for max value (in degrees).
displayValue              = true                       // Display the digital value?
valueBackgroundImageName  = "standard/cyan_circle.png"          // The name of the image to render behind the value number.
valuePosX                 = 100                        // The x-offset in pixels to the value label.
valuePosY                 = 100                        // The y-offset in pixels to the value label.
valueFont                 = "StandardFont"             // The font used to draw the value.
valueFontColor            = "#1A261C"                  // The font color used to draw the value.
maxVelocity               = 340                        // The maximum velocity in km/h.
</WidgetPart>             = "Speedo"
<WidgetPart>              = "Fuel"                     // The Widget part's name.
class                     = "net.ctdp.rfdynhud.widgets.fuelneedle.FuelNeedleWidget" // The Java class, that defines the Widget.
positioning               = BOTTOM_CENTER              // The way, position coordinates are interpreted (relative to). Valid values: TOP_LEFT, TOP_CENTER, TOP_RIGHT, CENTER_LEFT, CENTER_CENTER, CENTER_RIGHT, BOTTOM_LEFT, BOTTOM_CENTER, BOTTOM_RIGHT.
x                         = 0.0%                       // The x-coordinate for the position.
y                         = 0.0%                       // The y-coordinate for the position.
width                     = 24.904213%                 // The width. Use negative values to make the Widget be sized relative to screen size.
height                    = 50.0%                      // The height. Use negative values to make the Widget be sized relative to screen size.
background                = "image:standard/fuel_needle_bg.png" // The Widget's background (color or image).
minValue                  = -1.0E9                     // The minimum value accepted for the markers and needle
maxValue                  = 1.0E9                      // The maximum value accepted for the markers and needle
displayMarkers            = false                      // Display markers?
displayMarkerNumbers      = false                      // Display marker numbers?
markerNumbersInside       = false                      // Render marker numbers inside of the markers?
markersInnerRadius        = 224                        // The inner radius of the markers (in background image space)
markersLength             = 50                         // The length of the markers (in background image space)
markersBigStep            = 100                        // Step size of bigger rev markers
markersSmallStep          = 10                         // Step size of smaller rev markers
lastMarkerBig             = true                       // Whether to force the last marker to be treated as a big one.
markersColor              = "#FFFFFF"                  // The color used to draw the markers.
markersFont               = "Monospaced-BOLD-9va"      // The font used to draw the marker numbers.
markersFontColor          = "#FFFFFF"                  // The font color used to draw the marker numbers.
needleImageName           = "standard/fuel_needle.png"        // The name of the needle image.
needleMountX              = -1                         // The x-offset in background image pixels to the needle mount (-1 for center).
needleMountY              = 520                        // The y-offset in background image pixels to the needle mount (-1 for center).
needlePivotBottomOffset   = 60                         // The offset in (unscaled) pixels from the bottom of the image, where the center of the needle's axis is.
needleRotationForMinValue = -44.0                      // The rotation for the needle image, that it has for min value (in degrees).
needleRotationForMaxValue = 42.0                       // The rotation for the needle image, that it has for max value (in degrees).
displayValue              = false                      // Display the digital value?
valueBackgroundImageName  = "standard/cyan_circle.png"          // The name of the image to render behind the value number.
valuePosX                 = 100                        // The x-offset in pixels to the value label.
valuePosY                 = 100                        // The y-offset in pixels to the value label.
valueFont                 = "StandardFont"             // The font used to draw the value.
valueFontColor            = "#1A261C"                  // The font color used to draw the value.
lowFuelWarningImageOff    = "standard/shiftlight_off.png"       // Image name for the off-state of the low fuel warning.
lowFuelWarningImageOn     = "standard/shiftlight_on_red.png"    // Image name for the on-state of the low fuel warning.
lowFuelWarningImagePositioning = TOP_RIGHT             // Positioning type for the low-fuel-warning image.
lowFuelWarningImagePositionX = 3.0769231%              // X-position for the low-fuel-warning image.
lowFuelWarningImagePositionY = 3.0769231%              // Y-position for the low-fuel-warning image.
lowFuelWarningImageHeight = 19.999998%                 // Height for the low-fuel-warning image.
lowFuelWarningLaps        = 1                          // Number of laps to start warning before out of fuel.
lowFuelBlinkTime          = 500                        // Blink time in milli seconds for low fuel warning (0 to disable).
</WidgetPart>             = "Fuel"
<WidgetPart>              = "Revs"                     // The Widget part's name.
class                     = "net.ctdp.rfdynhud.widgets.revmeter.RevMeterWidget" // The Java class, that defines the Widget.
positioning               = TOP_RIGHT                  // The way, position coordinates are interpreted (relative to). Valid values: TOP_LEFT, TOP_CENTER, TOP_RIGHT, CENTER_LEFT, CENTER_CENTER, CENTER_RIGHT, BOTTOM_LEFT, BOTTOM_CENTER, BOTTOM_RIGHT.
x                         = 0.0%                       // The x-coordinate for the position.
y                         = 0.0%                       // The y-coordinate for the position.
width                     = 44.827587%                 // The width. Use negative values to make the Widget be sized relative to screen size.
height                    = 90.0%                      // The height. Use negative values to make the Widget be sized relative to screen size.
background                = "image:standard/rev_meter_bg.png" // The Widget's background (color or image).
font                      = "StandardFont"             // The used font.
fontColor                 = "StandardFontColor"        // The Widget's font color in the format #RRGGBB (hex).
minValue                  = -1.0E9                     // The minimum value accepted for the markers and needle
maxValue                  = 1.0E9                      // The maximum value accepted for the markers and needle
displayMarkers            = true                       // Display markers?
displayMarkerNumbers      = true                       // Display marker numbers?
markerNumbersInside       = false                      // Render marker numbers inside of the markers?
markersInnerRadius        = 224                        // The inner radius of the markers (in background image space)
markersLength             = 50                         // The length of the markers (in background image space)
markersBigStep            = 1000                       // Step size of bigger rev markers
markersSmallStep          = 200                        // Step size of smaller rev markers
lastMarkerBig             = false                      // Whether to force the last marker to be treated as a big one.
markersColor              = "#FFFFFF"                  // The color used to draw the markers.
markersFont               = "Monospaced-BOLD-9va"      // The font used to draw the marker numbers.
markersFontColor          = "#FFFFFF"                  // The font color used to draw the marker numbers.
needleImageName           = "standard/rev_meter_needle.png" // The name of the needle image.
needleMountX              = -1                         // The x-offset in background image pixels to the needle mount (-1 for center).
needleMountY              = -1                         // The y-offset in background image pixels to the needle mount (-1 for center).
needlePivotBottomOffset   = 60                         // The offset in (unscaled) pixels from the bottom of the image, where the center of the needle's axis is.
needleRotationForMinValue = -122.4                     // The rotation for the needle image, that it has for min value (in degrees).
needleRotationForMaxValue = 118.8                      // The rotation for the needle image, that it has for max value (in degrees).
displayValue              = false                      // Display the digital value?
valueBackgroundImageName  = "standard/cyan_circle.png"          // The name of the image to render behind the value number.
valuePosX                 = 100                        // The x-offset in pixels to the value label.
valuePosY                 = 100                        // The y-offset in pixels to the value label.
valueFont                 = "StandardFont"             // The font used to draw the value.
valueFontColor            = "#1A261C"                  // The font color used to draw the value.
hideWhenViewingOtherCar   = false                      // Hide the Widget when another car is being observed?
useMaxRevLimit            = true                       // Whether to use maximum possible (by setup) rev limit
revMarkersMediumColor     = "#FFFF00"                  // The color used to draw the rev markers for medium boost.
revMarkersHighColor       = "#FF0000"                  // The color used to draw the rev markers for high revs.
fillHighBackground        = false                      // Fill the rev markers' background with medium and high color instead of coloring the markers.
interpolateMarkerColors   = false                      // Interpolate medium and high colors.
numShiftLights            = 2                          // The number of shift lights to render.
shiftLightImageNameOff1   = "standard/shiftlight_off.png"       // The name of the shift light image for "off" state.
shiftLightImageNameOn1    = "standard/shiftlight_on_red.png"    // The name of the shift light image for "on" state.
shiftLightPosX1           = 625                        // The x-offset in pixels to the gear label.
shiftLightPosY1           = 42                         // The y-offset in pixels to the gear label.
shiftLightRPM1            = -200                       // The RPM (rounds per minute) to subtract from the maximum for the level to display shoft light on
shiftLightImageNameOff2   = "standard/shiftlight_off.png"       // The name of the shift light image for "off" state.
shiftLightImageNameOn2    = "standard/shiftlight_on_orange.png" // The name of the shift light image for "on" state.
shiftLightPosX2           = 593                        // The x-offset in pixels to the gear label.
shiftLightPosY2           = 42                         // The y-offset in pixels to the gear label.
shiftLightRPM2            = -600                       // The RPM (rounds per minute) to subtract from the maximum for the level to display shoft light on
displayGear               = true                       // Display the gear?
gearBackgroundImageName   = ""                         // The name of the image to render behind the gear number.
gearPosX                  = 354                        // The x-offset in pixels to the gear label.
gearPosY                  = 512                        // The y-offset in pixels to the gear label.
gearFont                  = "GearFont"                 // The font used to draw the gear.
gearFontColor             = "#1A261C"                  // The font color used to draw the gear.
displayBoostBar           = true                       // Display a graphical bar for engine boost mapping?
boostBarPosX              = 135                        // The x-position of the boost bar.
boostBarPosY              = 671                        // The y-position of the boost bar.
boostBarWidth             = 438                        // The width of the boost bar.
boostBarHeight            = 27                         // The height of the boost bar.
displayBoostNumber        = true                       // Display a number for engine boost mapping?
boostNumberBackgroundImageName = ""                    // The name of the image to render behind the boost number.
boostNumberPosX           = 392                        // The x-position of the boost number.
boostNumberPosY           = 544                        // The y-position of the boost number.
boostNumberFont           = "StandardFont"             // The font used to draw the boost number.
boostNumberFontColor      = "#FF0000"                  // The font color used to draw the boost bar.
displayRPMString1         = true                       // whether to display the digital RPM/Revs string or not
displayCurrRPM1           = true                       // whether to display the current revs or to hide them
displayMaxRPM1            = true                       // whether to display the maximum revs or to hide them
useBoostRevLimit1         = false                      // whether to use boost level to display max RPM
rpmPosX1                  = 170                        // The offset in (background image space) pixels from the right of the Widget, where the text is to be placed.
rpmPosY1                  = 603                        // The offset in (background image space) pixels from the top of the Widget, where the text is to be placed.
rpmFont1                  = "StandardFont"             // The font used to draw the RPM.
rpmFontColor1             = "StandardFontColor"        // The font color used to draw the RPM.
rpmJoinString1            = " / "                      // The String to use to join the current and max RPM.
displayRPMString2         = false                      // whether to display the digital RPM/Revs string or not
displayCurrRPM2           = true                       // whether to display the current revs or to hide them
displayMaxRPM2            = true                       // whether to display the maximum revs or to hide them
useBoostRevLimit2         = false                      // whether to use boost level to display max RPM
rpmPosX2                  = 170                        // The offset in (background image space) pixels from the right of the Widget, where the text is to be placed.
rpmPosY2                  = 603                        // The offset in (background image space) pixels from the top of the Widget, where the text is to be placed.
rpmFont2                  = "StandardFont"             // The font used to draw the RPM.
rpmFontColor2             = "StandardFontColor"        // The font color used to draw the RPM.
rpmJoinString2            = " / "                      // The String to use to join the current and max RPM.
peakNeedleImageName       = ""                         // The name of the peak needle image.
peakNeedlePivotBottomOffset = 60                       // The offset in (unscaled) pixels from the bottom of the image, where the center of the peak needle's axis is.
peakNeedleWaitTime        = 1000                       // The time in milliseconds to let the peak needle stay at the peak value.
peakNeedleCooldown        = 1000                       // The time in milliseconds, that the peak needle takes to go down from max RPM to zero.
peakNeedleDownshiftIgnoreTime = 1500                   // The time in milliseconds to ignore current revs after a downshift.
</WidgetPart>             = "Revs"
